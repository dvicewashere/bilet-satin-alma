# DviceBilet - Docker Compose Yapılandırması
version: '3.8'

services:
  # Web servisi
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: dvicebilet-web
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./bus_tickets.db:/var/www/html/bus_tickets.db
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d
      - TZ=Europe/Istanbul
    networks:
      - dvicebilet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db

  # Veritabanı servisi (SQLite)
  db:
    image: alpine:latest
    container_name: dvicebilet-db
    volumes:
      - ./bus_tickets.db:/data/bus_tickets.db
      - ./database_bus_tickets.sql:/data/database_bus_tickets.sql
    networks:
      - dvicebilet-network
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        if [ ! -f /data/bus_tickets.db ]; then
          echo 'Veritabanı dosyası bulunamadı, oluşturuluyor...' &&
          sqlite3 /data/bus_tickets.db < /data/database_bus_tickets.sql
        fi &&
        echo 'SQLite veritabanı hazır' &&
        tail -f /dev/null
      "

  # Nginx reverse proxy (production için)
  nginx:
    image: nginx:alpine
    container_name: dvicebilet-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - dvicebilet-network
    restart: unless-stopped
    profiles:
      - production

  # Redis cache (opsiyonel)
  redis:
    image: redis:alpine
    container_name: dvicebilet-redis
    ports:
      - "6379:6379"
    networks:
      - dvicebilet-network
    restart: unless-stopped
    profiles:
      - cache

networks:
  dvicebilet-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
